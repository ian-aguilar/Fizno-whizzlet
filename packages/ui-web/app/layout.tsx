"use client";
import React, { useEffect } from "react";
import "./css/style.css";
import { Inter } from "next/font/google";
import Theme from "./theme-provider";
import AppProvider from "./app-provider";
import Providers from "@/helpers/redux/providers";
import { GoogleOAuthProvider as OriginalGoogleOAuthProvider } from "@react-oauth/google";
import AuthEventListner from "@/hoc/AuthEventListner";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
  display: "swap",
});

// export const metadata = {
//   title: "Fizno Admin",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  useEffect(() => {
    window.addEventListener("pageshow", function (event) {
      if (event.persisted) {
        // Forces font reload
        document.fonts.load('1em "Montserrat"');
      }
    });
  }, []);
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        {/* <link
          href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
          rel="stylesheet"
        /> */}
        <link
          href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
          rel="stylesheet"
        ></link>
        {/* Favicon Link */}
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="png" href="/favicon.png" sizes="any" />

        <title>Fizno</title>
      </head>
      <body
        className={`${inter.variable} font-inter antialiased bg-slate-100 dark:bg-slate-900 text-slate-600 dark:text-slate-400`}
        style={{ fontFamily: inter.style.fontFamily }}
      >
        <Providers>
          <OriginalGoogleOAuthProvider
            clientId={process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID!}
          >
            <Theme>
              <AppProvider>
                <AuthEventListner>{children}</AuthEventListner>
              </AppProvider>
            </Theme>
          </OriginalGoogleOAuthProvider>
        </Providers>
      </body>
    </html>
  );
}
